// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lbg.finbuddy.service.api.service.impl;

import com.lbg.finbuddy.model.ThirdParty;
import com.lbg.finbuddy.repository.ThirdPartyRepository;
import com.lbg.finbuddy.service.api.service.impl.ThirdPartyServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ThirdPartyServiceImpl_Roo_Service_Impl {
    
    declare @type: ThirdPartyServiceImpl: @Service;
    
    declare @type: ThirdPartyServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ThirdPartyRepository ThirdPartyServiceImpl.thirdPartyRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param thirdPartyRepository
     */
    @Autowired
    public ThirdPartyServiceImpl.new(ThirdPartyRepository thirdPartyRepository) {
        setThirdPartyRepository(thirdPartyRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ThirdPartyRepository
     */
    public ThirdPartyRepository ThirdPartyServiceImpl.getThirdPartyRepository() {
        return thirdPartyRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param thirdPartyRepository
     */
    public void ThirdPartyServiceImpl.setThirdPartyRepository(ThirdPartyRepository thirdPartyRepository) {
        this.thirdPartyRepository = thirdPartyRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param thirdParty
     */
    @Transactional
    public void ThirdPartyServiceImpl.delete(ThirdParty thirdParty) {
        getThirdPartyRepository().delete(thirdParty);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<ThirdParty> ThirdPartyServiceImpl.save(Iterable<ThirdParty> entities) {
        return getThirdPartyRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ThirdPartyServiceImpl.delete(Iterable<Long> ids) {
        List<ThirdParty> toDelete = getThirdPartyRepository().findAll(ids);
        getThirdPartyRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return ThirdParty
     */
    @Transactional
    public ThirdParty ThirdPartyServiceImpl.save(ThirdParty entity) {
        return getThirdPartyRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ThirdParty
     */
    public ThirdParty ThirdPartyServiceImpl.findOne(Long id) {
        return getThirdPartyRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ThirdParty
     */
    public ThirdParty ThirdPartyServiceImpl.findOneForUpdate(Long id) {
        return getThirdPartyRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<ThirdParty> ThirdPartyServiceImpl.findAll(Iterable<Long> ids) {
        return getThirdPartyRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<ThirdParty> ThirdPartyServiceImpl.findAll() {
        return getThirdPartyRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ThirdPartyServiceImpl.count() {
        return getThirdPartyRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ThirdParty> ThirdPartyServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getThirdPartyRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<ThirdParty> ThirdPartyServiceImpl.getEntityType() {
        return ThirdParty.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ThirdPartyServiceImpl.getIdType() {
        return Long.class;
    }
    
}
