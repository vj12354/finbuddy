// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lbg.finbuddy.repository;

import com.lbg.finbuddy.model.DirectDebt;
import com.lbg.finbuddy.model.QDirectDebt;
import com.lbg.finbuddy.repository.DirectDebtRepositoryCustom;
import com.lbg.finbuddy.repository.DirectDebtRepositoryImpl;
import com.querydsl.core.types.Path;
import com.querydsl.jpa.JPQLQuery;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.jpa.repository.support.QueryDslRepositorySupportExt.AttributeMappingBuilder;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.transaction.annotation.Transactional;

privileged aspect DirectDebtRepositoryImpl_Roo_Jpa_Repository_Impl {
    
    declare parents: DirectDebtRepositoryImpl implements DirectDebtRepositoryCustom;
    
    declare @type: DirectDebtRepositoryImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String DirectDebtRepositoryImpl.NAME = "name";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String DirectDebtRepositoryImpl.DESCRIPTION = "description";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String DirectDebtRepositoryImpl.ACCOUNT = "account";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String DirectDebtRepositoryImpl.NOMBER = "nomber";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String DirectDebtRepositoryImpl.SORTCODE = "sortcode";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<DirectDebt> DirectDebtRepositoryImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        
        QDirectDebt directDebt = QDirectDebt.directDebt;
        
        JPQLQuery<DirectDebt> query = from(directDebt);
        
        Path<?>[] paths = new Path<?>[] {directDebt.name,directDebt.description,directDebt.account,directDebt.nomber,directDebt.sortcode};        
        applyGlobalSearch(globalSearch, query, paths);
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(NAME, directDebt.name)
			.map(DESCRIPTION, directDebt.description)
			.map(ACCOUNT, directDebt.account)
			.map(NOMBER, directDebt.nomber)
			.map(SORTCODE, directDebt.sortcode);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, directDebt);
    }
    
}
